%%
%% This is file `biblatex.sty'.
%%

% Set up the version strings here, so they are the same for both branches
\def\abx@date{2016/03/03}
\def\abx@version{3.3}
\def\abx@bbxid{\abx@date\space v\abx@version\space biblatex bibliography style (PK/JW/AB)}
\def\abx@cbxid{\abx@date\space v\abx@version\space biblatex citation style (PK/JW/AB)}
\def\abx@lbxid{\abx@date\space v\abx@version\space biblatex localization (PK/JW/AB)}
\def\abx@cptid{\abx@date\space v\abx@version\space biblatex compatibility (PK/JW/AB)}
% This is not updated by build script as the controlfile version
% does not necessarily change with the package version.
% This is used when writing the .bcf
\def\blx@bcfversion{3.0}
% This is not updated by build script as the bbl version
% does not necessarily change with the package version.
% This is used when checking the .bbl
\def\blx@bblversion{2.6}

\NeedsTeXFormat{LaTeX2e}[2005/12/01]
\ProvidesPackage{biblatex}
[\abx@date\space v\abx@version\space programmable bibliographies (PK/JW/AB)]

% Set up a switch for choosing the version
\newif\ifblx@load@version@legacy

% A switch so we can issue a message about the backend
\newif\ifblx@load@backend@seen

% Fake keyval options to detect the backend
% All basically the same, so passing the backend is done simply
\DeclareOption{backend=bibtex}{%
  \PassOptionsToPackage{\CurrentOption}{biblatex_legacy}%
  \blx@load@version@legacytrue
  \blx@load@backend@seentrue
}
\DeclareOption{backend=bibtex8}{%
  \PassOptionsToPackage{\CurrentOption}{biblatex_legacy}%
  \blx@load@version@legacytrue
  \blx@load@backend@seentrue
}
\DeclareOption{backend=bibtexu}{%
  \PassOptionsToPackage{\CurrentOption}{biblatex_legacy}%
  \blx@load@version@legacytrue
  \blx@load@backend@seentrue
}
\DeclareOption{backend=biber}{%
  \blx@load@version@legacyfalse
  \blx@load@backend@seentrue
}
\DeclareOption*{%
  \PassOptionsToPackage{\CurrentOption}{biblatex_legacy}%
  \PassOptionsToPackage{\CurrentOption}{biblatex_}%
}

% Default to the Biber backend
\blx@load@version@legacyfalse
\ProcessOptions\relax

\ifblx@load@backend@seen
\else
  \PackageWarningNoLine{biblatex}
    {%
      No "backend" specified, using Biber backend.\MessageBreak
      To use BibTeX, load biblatex with \MessageBreak
      the "backend=bibtex" option%
    }
\fi

% Now do the loading: avoid any awkward stuff with the conditional by
% expanding first
\ifblx@load@version@legacy
  \expandafter\@firstoftwo
\else
  \expandafter\@secondoftwo
\fi
  {\RequirePackage{biblatex_legacy}}
  {\RequirePackage{biblatex_}}

%% Copyright (C) 2006-2011 Philipp Lehman
%%               2012-2016 Philip Kime, Audrey Boruvka, Joseph Wright
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    http://www.latex-project.org/lppl.txt
%% 
%% This work is "maintained" (as per LPPL maintenance status) by
%%   Philip Kime, Audrey Boruvka, Joseph Wright.
